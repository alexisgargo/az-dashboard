# next 
FROM node:18-alpine AS base

# # Install dependencies only when needed
# FROM base AS deps
# # Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
# RUN apk add --no-cache libc6-compat

FROM base AS builder

WORKDIR /dashboard

# Install dependencies based on the preferred package manager
COPY frontend/package.json frontend/package-lock.json ./
RUN \
  npm ci \
  fi

COPY /frontend/app ./app
COPY /frontend/components ./components
COPY /frontend/next.config.js .
COPY /frontend/tsconfig.json .
COPY /frontend/config ./config
COPY /frontend/public ./public
COPY /frontend/styles ./styles
COPY /frontend/types ./types
COPY /frontend/.eslintrc.json .
COPY /frontend/postcss.config.js .
COPY /frontend/tailwind.config.js .


ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=http://localhost:8080


# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED 1

# RUN \
#   npm run build \
#   fi

RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /dashboard

# ENV NODE_ENV production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

COPY --from=builder /dashboard/public ./public

# Set the correct permission for prerender cache
# RUN mkdir .next
# RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /dashboard/.next/standalone .
COPY --from=builder --chown=nextjs:nodejs /dashboard/.next/static ./.next/static


ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=http://localhost:8080

# exposed in docker-compose
# EXPOSE 3000
# ENV PORT 3000

# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/next-config-js/output
# CMD HOSTNAME="0.0.0.0" node server.js

CMD ["node", "server.js"]